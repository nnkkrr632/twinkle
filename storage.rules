rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // https://zenn.dev/sgr_ksmt/articles/e6e7dfaf1851d1
    function isValidContentType(contentType) {
      return contentType in ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'];
    }
    function isValidFileSize(size) {
      return size < 5 * 1024 * 1024 // 5MB
    }

    match /tweet-images/{uid}/{image} {
      allow read: if true
      allow create: if request.auth != null
        && request.auth.uid == uid
        && isValidContentType(request.resource.contentType)
        && isValidFileSize(request.resource.size)
      allow delete: if request.auth != null
        && request.auth.uid == uid
    }

    match /user-header-images/{uid}/{image} {
      allow read: if true
      allow create: if request.auth != null
        && request.auth.uid == uid
        && isValidContentType(request.resource.contentType)
        && isValidFileSize(request.resource.size)
      allow delete: if request.auth != null
        && request.auth.uid == uid
    }

    match /user-icon-images/{uid}/{image} {
      allow read: if true
      allow create: if request.auth != null
        && request.auth.uid == uid
        && isValidContentType(request.resource.contentType)
        && isValidFileSize(request.resource.size)
      allow delete: if request.auth != null
        && request.auth.uid == uid
    }
  }
}
